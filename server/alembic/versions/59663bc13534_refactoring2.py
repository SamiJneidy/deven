"""refactoring2

Revision ID: 59663bc13534
Revises: 95d4f4edff47
Create Date: 2025-05-12 13:21:22.692276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '59663bc13534'
down_revision: Union[str, None] = '95d4f4edff47'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_shifts_id', table_name='shifts')
    op.drop_constraint('employees_shift_id_fkey', 'employees', type_='foreignkey')
    op.drop_column('employees', 'shift_id')
    op.drop_table('shifts')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('employees', sa.Column('shift_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('employees_shift_id_fkey', 'employees', 'shifts', ['shift_id'], ['id'])
    op.create_table('shifts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIME(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='shifts_company_id_fkey'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='shifts_created_by_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='shifts_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='shifts_pkey')
    )
    op.create_index('ix_shifts_id', 'shifts', ['id'], unique=False)
    # ### end Alembic commands ###

"""completed employee

Revision ID: a3739eb39806
Revises: c8462a82edb8
Create Date: 2025-05-19 14:03:57.297551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a3739eb39806'
down_revision: Union[str, None] = 'c8462a82edb8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee_education',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('field_of_study', sa.String(), nullable=False),
    sa.Column('degree', sa.String(), nullable=False),
    sa.Column('institution', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('grade', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_education_id'), 'employee_education', ['id'], unique=False)
    op.add_column('employees', sa.Column('shift_id', sa.Integer(), nullable=True))
    op.add_column('employees', sa.Column('state', sa.String(), nullable=False))
    op.add_column('employees', sa.Column('city', sa.String(), nullable=False))
    op.add_column('employees', sa.Column('postal_code', sa.String(), nullable=True))
    op.add_column('employees', sa.Column('address_line1', sa.String(), nullable=True))
    op.add_column('employees', sa.Column('address_line2', sa.String(), nullable=True))
    op.alter_column('employees', 'country',
               existing_type=postgresql.ENUM('SYRIA', 'USA', name='country'),
               type_=sa.String(),
               nullable=False)
    op.create_foreign_key(None, 'employees', 'shifts', ['shift_id'], ['id'])
    op.drop_column('employees', 'education')
    op.drop_column('employees', 'address')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('employees', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('employees', sa.Column('education', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.alter_column('employees', 'country',
               existing_type=sa.String(),
               type_=postgresql.ENUM('SYRIA', 'USA', name='country'),
               nullable=True)
    op.drop_column('employees', 'address_line2')
    op.drop_column('employees', 'address_line1')
    op.drop_column('employees', 'postal_code')
    op.drop_column('employees', 'city')
    op.drop_column('employees', 'state')
    op.drop_column('employees', 'shift_id')
    op.drop_index(op.f('ix_employee_education_id'), table_name='employee_education')
    op.drop_table('employee_education')
    # ### end Alembic commands ###

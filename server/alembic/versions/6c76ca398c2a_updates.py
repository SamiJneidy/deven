"""updates

Revision ID: 6c76ca398c2a
Revises: bfe1c32b6fc5
Create Date: 2025-05-12 00:42:55.093066

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6c76ca398c2a'
down_revision: Union[str, None] = 'bfe1c32b6fc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.drop_column('employees', 'company_branch_id')
    op.drop_index('ix_company_branches_id', table_name='company_branches')
    op.drop_column('department', 'description')
    op.drop_column('work_types', 'description')
    op.drop_table('company_branches')
    op.add_column('employees', sa.Column('location_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'employees', 'locations', ['location_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('work_types', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('employees', sa.Column('company_branch_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'employees', type_='foreignkey')
    op.create_foreign_key('employees_company_branch_id_fkey', 'employees', 'company_branches', ['company_branch_id'], ['id'])
    op.drop_column('employees', 'location_id')
    op.add_column('department', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table('company_branches',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='company_branches_company_id_fkey'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='company_branches_created_by_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='company_branches_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='company_branches_pkey')
    )
    op.create_index('ix_company_branches_id', 'company_branches', ['id'], unique=False)
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    # ### end Alembic commands ###
